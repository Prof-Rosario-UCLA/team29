name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: chess_app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install
        cd client && npm install
        cd ../server && npm install

    - name: Build
      run: |
        cd client && npm run build

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Deploy to VM
      run: |
        echo "Starting VM if stopped..."
        gcloud compute instances start ${{ secrets.VM_NAME }} --zone=us-west1-a
        
        echo "Waiting for VM to be ready..."
        sleep 30
        
        echo "Copying files to VM..."
        # Create necessary directories
        gcloud compute ssh ${{ secrets.VM_USER }}@${{ secrets.VM_NAME }} --zone=us-west1-a --command="mkdir -p ~/client/dist"
        
        # Copy files
        gcloud compute scp --recurse ./client/dist/* ${{ secrets.VM_USER }}@${{ secrets.VM_NAME }}:~/client/dist --zone=us-west1-a
        gcloud compute scp --recurse ./server/* ${{ secrets.VM_USER }}@${{ secrets.VM_NAME }}:~/server --zone=us-west1-a
        gcloud compute scp ./package.json ./package-lock.json ${{ secrets.VM_USER }}@${{ secrets.VM_NAME }}:~ --zone=us-west1-a
        
        echo "Setting up environment and restarting service..."
        gcloud compute ssh ${{ secrets.VM_USER }}@${{ secrets.VM_NAME }} --zone=us-west1-a --command="
          # Create .env file
          echo 'DATABASE_URL=postgres://postgres:postgres@localhost:5432/chess_app' > .env
          echo 'JWT_SECRET=${{ secrets.JWT_SECRET }}' >> .env
          echo 'CLIENT_URL=http://localhost:3000' >> .env
          echo 'PORT=3001' >> .env
          echo 'NODE_ENV=production' >> .env
          
          # Install dependencies
          npm install
          cd server && npm install
          
          # Setup database
          node setup-db.js
          
          # Restart service
          pm2 restart all || pm2 start npm --name 'chess-app' -- start
        "
        
        echo "Deployment completed!" 