(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "memory" (memory $0 1 1))
 (data (i32.const 1036) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 1084) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 1148) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 1212) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00s\00t\00u\00b\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1276) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1308) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1372) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00w\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1404) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 1452) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00")
 (data (i32.const 1484) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\fe\ff\ff\ff\01\00\00\00\00\00\00\00")
 (data (i32.const 1516) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\ff\ff\ff\ff\fe\ff\ff\ff\00\00\00\00")
 (data (i32.const 1548) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\ff\ff\ff\ff\02\00\00\00\00\00\00\00")
 (data (i32.const 1580) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\fe\ff\ff\ff\00\00\00\00")
 (data (i32.const 1612) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 1644) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\ff\ff\ff\ff\00\00\00\00")
 (data (i32.const 1676) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 1708) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 1740) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\ff\ff\ff\ff\00\00\00\00")
 (data (i32.const 1772) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\ff\ff\ff\ff\01\00\00\00\00\00\00\00")
 (data (i32.const 1804) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00")
 (data (i32.const 1836) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1868) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\ff\ff\ff\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 1900) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 1932) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\ff\ff\ff\ff\00\00\00\00")
 (data (i32.const 1964) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2092) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2124) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00P\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2156) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00p\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2188) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2316) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 2380) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2412) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data (i32.const 2508) "\12\10\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1fff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\80@\00\04\00\00\00@\01\00\00\00\00\00\00\00\00\a1\90\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff0\04\b0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\82\00\00\00\00\00\00\fe\ff\ff\ff\ff\bf\b6\00\00\00\00\00\10\00?\00\ff\17\00\00\00\00\01\f8\ff\ff\00\00\01\00\00\00\00\00\00\00\00\00\00\00\c0\bf\ff=\00\00\00\80\02\00\00\00\ff\ff\ff\07\00\00\00\00\00\00\00\00\00\00\c0\ff\01\00\00\00\00\00\00\f8?$\00\00\c0\ff\ff?\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\14\fe!\fe\00\0c\00\02\00\02\00\00\00\00\00\00\10\1e \00\00\0c\00\00@\06\00\00\00\00\00\00\10\869\02\00\00\00#\00\06\00\00\00\00\00\00\10\be!\00\00\0c\00\00\fc\02\00\00\00\00\00\00\90\1e `\00\0c\00\00\00\04\00\00\00\00\00\00\00\01 \00\00\00\00\00\00\11\00\00\00\00\00\00\c0\c1=`\00\0c\00\00\00\02\00\00\00\00\00\00\90@0\00\00\0c\00\00\00\03\00\00\00\00\00\00\18\1e \00\00\0c\00\00\00\02\00\00\00\00\00\00\00\00\04\\\00\00\00\00\00\00\00\00\00\00\00\f2\07\c0\7f\00\00\00\00\00\00\00\00\00\00\00\00\f2\1f@?\00\00\00\00\00\00\00\00\00\03\00\00\a0\02\00\00\00\00\00\00\fe\7f\df\e0\ff\fe\ff\ff\ff\1f@\00\00\00\00\00\00\00\00\00\00\00\00\e0\fdf\00\00\00\c3\01\00\1e\00d \00 \00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\e0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\1c\00\00\00\0c\00\00\00\0c\00\00\00\00\00\00\00\b0?@\fe\8f \00\00\00\00\00x\00\00\00\00\00\00\08\00\00\00\00\00\00\00`\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\87\01\04\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\t\00\00\00\00\00\00@\7f\e5\1f\f8\9f\00\00\00\00\80\00\ff\ff\01\00\00\00\00\00\00\00\0f\00\00\00\00\00\d0\17\04\00\00\00\00\f8\0f\00\03\00\00\00<;\00\00\00\00\00\00@\a3\03\00\00\00\00\00\00\f0\cf\00\00\00\00\00\00\00\00?\00\00\00\00\00\00\00\00\00\00\f7\ff\fd!\10\03\00\00\00\00\00\f0\ff\ff\ff\ff\ff\ff\ff\07\00\01\00\00\00\f8\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\a0\03\e0\00\e0\00\e0\00`\00\f8\00\03\90|\00\00\00\00\00\00\df\ff\02\80\00\00\ff\1f\00\00\00\00\00\00\ff\ff\ff\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\00\00\00\00\00\00\00\00\00\00\00\00\00\80\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\00\80\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\00\00\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00<>\08\00\00\00\00\00\00\00\00\00\00\00~\00\00\00\00\00\00\00\00\00\00\00p\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00?\00\10\00\00\00\00\00\00\00\00\00\00\00\80\f7\bf\00\00\00\f0\00\00\00\00\00\00\00\00\00\00\03\00\ff\ff\ff\ff\03\00\00\00\00\00\00\00\00\00\01\00\00\07\00\00\00\00\00\00\00\00\00\00\00\00\00\03D\08\00\00`\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\00\00\00\ff\ff\03\80\00\00\00\00\c0?\00\00\80\ff\03\00\00\00\00\00\07\00\00\00\00\00\c83\00\80\00\00`\00\00\00\00\00\00\00\00~f\00\08\10\00\00\00\00\01\10\00\00\00\00\00\00\9d\c1\02\00\00 \000X\00\00\00\00\00\00\00\00\00\00\00\00\f8\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00 !\00\00\00\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\fc\ff\03\00\00\00\00\00\00\00\ff\ff\08\00\ff\ff\00\00\00\00$\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\80@\00\04\00\00\00@\01\00\00\00\00\00\01\00\00\00\00\c0\00\00\00\00\00\00\00\00\08\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00n\f0\00\00\00\00\00\87\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\00\00\00\00\00\00\00\f0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\ff\7f\00\00\00\00\00\00\80\03\00\00\00\00\00x&\00 \00\00\00\00\00\00\07\00\00\00\80\ef\1f\00\00\00\00\00\00\00\08\00\03\00\00\00\00\00\c0\7f\00\9e\00\00\00\00\00\00\00\00\00\00\00\80\d3@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\f8\07\00\00\03\00\00\00\00\00\00\18\01\00\00\00\c0\1f\1f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\\\00\00@\00\00\00\00\00\00\00\00\00\00\f8\85\0d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00<\b0\01\00\000\00\00\00\00\00\00\00\00\00\00\f8\a7\01\00\00\00\00\00\00\00\00\00\00\00\00(\bf\00\00\00\00\00\00\00\00\00\00\00\00\e0\bc\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\ff\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00X\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\0c\01\00\00\00\fe\07\00\00\00\00\f8y\80\00~\0e\00\00\00\00\00\fc\7f\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7f\bf\00\00\00\00\00\00\00\00\00\00\fc\ff\ff\fcm\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00~\b4\bf\00\00\00\00\00\00\00\00\00\a3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\00\00\00\00\7f\00\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\00\00\00\00\00\00\00\80\ff\ff\00\00\00\00\00\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\03\f8\ff\e7\0f\00\00\00<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\7f\f8\ff\ff\ff\ff\ff\1f \00\10\00\00\f8\fe\ff\00\00\00\00\00\00\00\00\00\00\7f\ff\ff\f9\db\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7f\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8")
 (data (i32.const 5516) "\12\13\14\15\16\17\10\10\10\10\10\10\10\10\10\10\18\10\10\19\10\10\10\10\10\10\10\10\1a\1b\11\1c\1d\1e\10\10\1fff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\04 \04\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\f7\f0\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ef\ff\ff\ff\ff\01\03\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\cf\bc@\d7\ff\ff\fb\ff\ff\ff\ff\ff\ff\ff\ff\ff\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fe\ff\ff\ff\7f\00\ff\ff\ff\ff\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\bf \ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff??\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\01\ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\ff\ff??\ff\ff\ff\ff??\ff\aa\ff\ff\ff?\ff\ff\ff\ff\ff\ff\df_\dc\1f\cf\0f\ff\1f\dc\1f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\80\00\00\ff\1f\00\00\00\00\00\00\00\00\00\00\00\00\84\fc/>P\bd\1f\f2\e0C\00\00\ff\ff\ff\ff\18\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ff\ff\ff\ff\ff\ff\03\00\00\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1fx\0c\00\ff\ff\ff\ff\bf \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff?\00\00\ff\ff\ff?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffx\ff\ff\ff\ff\ff\ff\fc\07\00\00\00\00`\07\00\00\00\00\00\00\ff\ff\ff\ff\ff\f7\ff\01\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\7f\00\f8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\0f\ff\ff\ff\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\df\ff\ff\ff\ff\ff\ff\ff\ff\dfd\de\ff\eb\ef\ff\ff\ff\ff\ff\ff\ff\bf\e7\df\df\ff\ff\ff{_\fc\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\ff\ff\fd\ff\ff\f7\ff\ff\ff\f7\ff\ff\df\ff\ff\ff\df\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\fd\ff\ff\ff\fd\ff\ff\f7\0f\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\03\ff\ff\ff\03\ff\ff\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7084) "\07\08\t\n\0b\0c\06\06\06\06\06\06\06\06\06\06\0d\06\06\0e\06\06\06\06\06\06\06\06\0fa\06\06\06\06\06\06\06\1b\06\06\06\06\06\06\06\06\06\06\06\1c\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1d\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1ey1P1P18P1P1P1P1P1P1P1PN1\02N\0d\0dN\03N\00$n\00N1&nQN$PN9\14\81\1b\1d\1dS1P1P\0d1P1P1P\1bS$P1\02\\{\\{\\{\\{\\{\14y\\{\\{\\-+I\03H\03x\\{\14\00\96\n\01+(\06\06\00*\06**+\07\bb\b5+\1e\00+\07+++\01++++++++++++++++++++++++++++++++\01+++++++++++++++++++++++*+++++++++++++\cdF\cd+\00%+\07\01\06\01UVVVVVUVV\02$\81\81\81\81\81\15\81\81\81\00\00+\00\b2\d1\b2\d1\b2\d1\b2\d1\00\00\cd\cc\01\00\d7\d7\d7\d7\d7\83\81\81\81\81\81\81\81\81\81\81\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\1c\00\00\00\00\001P1P1P1P1P1\02\00\001P1P1P1P1P1P1P1P1PN1P1PN1P1P1P1P1P1P1P1\02\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6*++++++++++++\00\00\00TVVVVVVVVVVVV\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00TVVVVVVVVVVVV\0c\00\0c*+++++++++++++\07*\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00*++++++++++++++++++++++++++VVl\81\15\00++++++++++++++++++++++++++++++++++++++++++\07l\03A++VVVVVVVVVVVVVV,V+++++++++++++++++++++\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0cl\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%Vz\9e&\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06\01++OVV,+\7fVV9++UVV++OVV,+\7fVV\817u[{\\++OVV\02\ac\04\00\009++UVV++OVV,++VV2\13\81W\00o\81~\c9\d7~-\81\81\0e~9\7foW\00\81\81~\15\00~\03++++++++++++\07+$+\97+++++++++*+++++VVVVV\80\81\81\81\819\bb*++++++++++++++++++++++++++++++++++++++++\01\81\81\81\81\81\81\81\81\81\81\81\81\81\81\81\c9\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\d0\0d\00N1\02\b4\c1\c1\d7\d7$P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P\d7\d7S\c1G\d4\d7\d7\d7\05++++++++++++\07\01\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00N1P1P1P1P1P1P1P\0d\00\00\00\00\00$P1P1P1P1P\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++y\\{\\{O{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\-++y\14\\{\\-y*\\\'\\{\\{\\{\a4\00\n\b4\\{\\{O\03x8+++++++++++++O-++\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\00\00\00\00\00\00*++++++++++++++++++++++++++\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00++++++++\07\00HVVVVVVVV\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++++UVVVVVVVVVVVV\0ee\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00*++++++++++VVVVVVVVVV\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++UVVVVVVVVVV\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9752) "\00\08\00\00V\01\00\009\00\00\00")
 (data (i32.const 9764) "\00\00\00\00\01 \00\00\00\e0\ff\ff\00\bf\1d\00\00\e7\02\00\00y\00\00\02$\00\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\01\02\00\00\00\fe\ff\ff\019\ff\ff\00\18\ff\ff\01\87\ff\ff\00\d4\fe\ff\00\c3\00\00\01\d2\00\00\01\ce\00\00\01\cd\00\00\01O\00\00\01\ca\00\00\01\cb\00\00\01\cf\00\00\00a\00\00\01\d3\00\00\01\d1\00\00\00\a3\00\00\01\d5\00\00\00\82\00\00\01\d6\00\00\01\da\00\00\01\d9\00\00\01\db\00\00\008\00\00\03\00\00\00\00\b1\ff\ff\01\9f\ff\ff\01\c8\ff\ff\02($\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\003\ff\ff\00&\ff\ff\01~\ff\ff\01+*\00\01]\ff\ff\01(*\00\00?*\00\01=\ff\ff\01E\00\00\01G\00\00\00\1f*\00\00\1c*\00\00\1e*\00\00.\ff\ff\002\ff\ff\006\ff\ff\005\ff\ff\00O\a5\00\00K\a5\00\001\ff\ff\00(\a5\00\00D\a5\00\00/\ff\ff\00-\ff\ff\00\f7)\00\00A\a5\00\00\fd)\00\00+\ff\ff\00*\ff\ff\00\e7)\00\00C\a5\00\00*\a5\00\00\bb\ff\ff\00\'\ff\ff\00\b9\ff\ff\00%\ff\ff\00\15\a5\00\00\12\a5\00\02$L\00\00\00\00\00\01 \00\00\00\e0\ff\ff\01\01\00\00\00\ff\ff\ff\00T\00\00\01t\00\00\01&\00\00\01%\00\00\01@\00\00\01?\00\00\00\da\ff\ff\00\db\ff\ff\00\e1\ff\ff\00\c0\ff\ff\00\c1\ff\ff\01\08\00\00\00\c2\ff\ff\00\c7\ff\ff\00\d1\ff\ff\00\ca\ff\ff\00\f8\ff\ff\00\aa\ff\ff\00\b0\ff\ff\00\07\00\00\00\8c\ff\ff\01\c4\ff\ff\00\a0\ff\ff\01\f9\ff\ff\02\1ap\00\01\01\00\00\00\ff\ff\ff\01 \00\00\00\e0\ff\ff\01P\00\00\01\0f\00\00\00\f1\ff\ff\00\00\00\00\010\00\00\00\d0\ff\ff\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c0\0b\00\01`\1c\00\00\00\00\00\01\d0\97\00\01\08\00\00\00\f8\ff\ff\02\05\8a\00\00\00\00\00\01@\f4\ff\00\9e\e7\ff\00\c2\89\00\00\db\e7\ff\00\92\e7\ff\00\93\e7\ff\00\9c\e7\ff\00\9d\e7\ff\00\a4\e7\ff\00\00\00\00\008\8a\00\00\04\8a\00\00\e6\0e\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c5\ff\ff\01A\e2\ff\02\1d\8f\00\00\08\00\00\01\f8\ff\ff\00\00\00\00\00V\00\00\01\aa\ff\ff\00J\00\00\00d\00\00\00\80\00\00\00p\00\00\00~\00\00\00\t\00\00\01\b6\ff\ff\01\f7\ff\ff\00\db\e3\ff\01\9c\ff\ff\01\90\ff\ff\01\80\ff\ff\01\82\ff\ff\02\05\ac\00\00\00\00\00\01\10\00\00\00\f0\ff\ff\01\1c\00\00\01\01\00\00\01\a3\e2\ff\01A\df\ff\01\ba\df\ff\00\e4\ff\ff\02\0b\b1\00\01\01\00\00\00\ff\ff\ff\010\00\00\00\d0\ff\ff\00\00\00\00\01\t\d6\ff\01\1a\f1\ff\01\19\d6\ff\00\d5\d5\ff\00\d8\d5\ff\01\e4\d5\ff\01\03\d6\ff\01\e1\d5\ff\01\e2\d5\ff\01\c1\d5\ff\00\00\00\00\00\a0\e3\ff\00\00\00\00\01\01\00\00\00\ff\ff\ff\02\0c\bc\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\01\bcZ\ff\01\a0\03\00\01\fcu\ff\01\d8Z\ff\000\00\00\01\b1Z\ff\01\b5Z\ff\01\bfZ\ff\01\eeZ\ff\01\d6Z\ff\01\ebZ\ff\01\d0\ff\ff\01\bdZ\ff\01\c8u\ff\00\00\00\00\000h\ff\00`\fc\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01(\00\00\00\d8\ff\ff\00\00\00\00\01@\00\00\00\c0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01\"\00\00\00\de\ff\ff")
 (data (i32.const 10724) "\00\06\'Qow\00\00\00\00\00\00\00\00\00\00|\00\00\7f\00\00\00\00\00\00\00\00\83\8e\92\97\00\aa\00\00\00\00\00\00\00\00\00\00\b4\c4\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c6\c9\00\00\00\db\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\de\00\00\00\00\e1\00\00\00\00\00\00\00\e4\00\00\00\00\00\00\00\00\00\00\00\e7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ea\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ed\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11236) "0\0c1\0dx\0e\7f\0f\80\10\81\11\86\12\89\13\8a\13\8e\14\8f\15\90\16\93\13\94\17\95\18\96\19\97\1a\9a\1b\9c\19\9d\1c\9e\1d\9f\1e\a6\1f\a9\1f\ae\1f\b1 \b2 \b7!\bf\"\c5#\c8#\cb#\dd$\f2#\f6%\f7& -:.=/>0?1@1C2D3E4P5Q6R7S8T9Y:[;\\<a=c>e?f@hAiBj@kClDoBqErFuG}H\82I\87J\89K\8aL\8bL\8cM\92N\9dO\9ePEW{\1d|\1d}\1d\7fX\86Y\88Z\89Z\8aZ\8c[\8e\\\8f\\\ac]\ad^\ae^\af^\c2_\cc`\cda\cea\cfb\d0c\d1d\d5e\d6f\d7g\f0h\f1i\f2j\f3k\f4l\f5m\f9n\fd-\fe-\ff-PiQiRiSiTiUiViWiXiYiZi[i\\i]i^i_i\82\00\83\00\84\00\85\00\86\00\87\00\88\00\89\00\c0u\cfv\80\89\81\8a\82\8b\85\8c\86\8dp\9dq\9dv\9ew\9ex\9fy\9fz\a0{\a0|\a1}\a1\b3\a2\ba\a3\bb\a3\bc\a4\be\a5\c3\a2\cc\a4\da\a6\db\a6\e5j\ea\a7\eb\a7\ecn\f3\a2\f8\a8\f9\a8\fa\a9\fb\a9\fc\a4&\b0*\b1+\b2N\b3\84\08b\bac\bbd\bce\bdf\bem\bfn\c0o\c1p\c2~\c3\7f\c3}\cf\8d\d0\94\d1\ab\d2\ac\d3\ad\d4\b0\d5\b1\d6\b2\d7\c4\d8\c5\d9\c6\da")
 (data (i32.const 11644) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11676) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11708) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00K\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11740) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00k\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11776) "\0b\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04A\00\00\00\00\00\00\04A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00$\t\00\00\00\00\00\00\04A\00\00\00\00\00\00\02\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (global $~lib/rt/stub/offset (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 11776))
 (table $0 2 funcref)
 (elem $0 (i32.const 1) $src/wasm/chess_ai/getBestMove~anonymous|0)
 (export "getBestMove" (func $src/wasm/chess_ai/getBestMove))
 (export "__new" (func $~lib/rt/stub/__new))
 (export "__pin" (func $~lib/rt/stub/__pin))
 (export "__unpin" (func $~lib/rt/stub/__unpin))
 (export "__collect" (func $~lib/rt/stub/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (start $~start)
 (func $~lib/rt/stub/maybeGrowMemory (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  memory.size
  local.tee $1
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  local.tee $2
  i32.gt_u
  if
   local.get $1
   local.get $0
   local.get $2
   i32.sub
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $2
   local.get $1
   local.get $2
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $2
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
  end
  local.get $0
  global.set $~lib/rt/stub/offset
 )
 (func $~lib/rt/stub/__alloc (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1168
   i32.const 1232
   i32.const 33
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/stub/offset
  global.get $~lib/rt/stub/offset
  i32.const 4
  i32.add
  local.tee $2
  local.get $0
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $0
  i32.add
  call $~lib/rt/stub/maybeGrowMemory
  local.get $0
  i32.store
  local.get $2
 )
 (func $~lib/rt/stub/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 1168
   i32.const 1232
   i32.const 86
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16
  i32.add
  call $~lib/rt/stub/__alloc
  local.tee $3
  i32.const 4
  i32.sub
  local.tee $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  local.get $1
  i32.store offset=12
  local.get $2
  local.get $0
  i32.store offset=16
  local.get $3
  i32.const 16
  i32.add
 )
 (func $~lib/memory/memory.fill (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $~lib/util/memory/memset|inlined.0
   local.get $1
   i32.eqz
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8
   local.get $0
   local.get $1
   i32.add
   local.tee $2
   i32.const 1
   i32.sub
   i32.const 0
   i32.store8
   local.get $1
   i32.const 2
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8 offset=1
   local.get $0
   i32.const 0
   i32.store8 offset=2
   local.get $2
   i32.const 2
   i32.sub
   i32.const 0
   i32.store8
   local.get $2
   i32.const 3
   i32.sub
   i32.const 0
   i32.store8
   local.get $1
   i32.const 6
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8 offset=3
   local.get $2
   i32.const 4
   i32.sub
   i32.const 0
   i32.store8
   local.get $1
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   local.get $0
   i32.sub
   i32.const 3
   i32.and
   local.tee $2
   i32.add
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   local.get $1
   local.get $2
   i32.sub
   i32.const -4
   i32.and
   local.tee $1
   i32.add
   local.tee $2
   i32.const 4
   i32.sub
   i32.const 0
   i32.store
   local.get $1
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 12
   i32.sub
   i32.const 0
   i32.store
   local.get $2
   i32.const 8
   i32.sub
   i32.const 0
   i32.store
   local.get $1
   i32.const 24
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.store offset=20
   local.get $0
   i32.const 0
   i32.store offset=24
   local.get $2
   i32.const 28
   i32.sub
   i32.const 0
   i32.store
   local.get $2
   i32.const 24
   i32.sub
   i32.const 0
   i32.store
   local.get $2
   i32.const 20
   i32.sub
   i32.const 0
   i32.store
   local.get $2
   i32.const 16
   i32.sub
   i32.const 0
   i32.store
   local.get $0
   local.get $0
   i32.const 4
   i32.and
   i32.const 24
   i32.add
   local.tee $2
   i32.add
   local.set $0
   local.get $1
   local.get $2
   i32.sub
   local.set $1
   loop $while-continue|0
    local.get $1
    i32.const 32
    i32.ge_u
    if
     local.get $0
     i64.const 0
     i64.store
     local.get $0
     i64.const 0
     i64.store offset=8
     local.get $0
     i64.const 0
     i64.store offset=16
     local.get $0
     i64.const 0
     i64.store offset=24
     local.get $1
     i32.const 32
     i32.sub
     local.set $1
     local.get $0
     i32.const 32
     i32.add
     local.set $0
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#constructor (result i32)
  (local $0 i32)
  i32.const 32
  i32.const 4
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 32
  call $~lib/memory/memory.fill
  local.get $0
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#constructor (result i32)
  (local $0 i32)
  i32.const 32
  i32.const 3
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 32
  call $~lib/memory/memory.fill
  local.get $0
 )
 (func $~lib/string/String#charAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.get $1
  i32.le_u
  if
   i32.const 1296
   return
  end
  i32.const 2
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $2
  local.get $1
  i32.const 1
  i32.shl
  local.get $0
  i32.add
  i32.load16_u
  i32.store16
  local.get $2
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  local.get $1
  i32.le_u
  if
   i32.const 1328
   i32.const 1104
   i32.const 133
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  local.get $2
  i32.store
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $1
  i32.const 0
  local.get $0
  select
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.ne
  if
   i32.const 0
   return
  end
  block $__inlined_func$~lib/util/string/compareImpl (result i32)
   local.get $0
   local.tee $2
   i32.const 7
   i32.and
   local.get $1
   i32.const 7
   i32.and
   i32.or
   i32.eqz
   local.get $3
   local.tee $0
   i32.const 4
   i32.ge_u
   i32.and
   if
    loop $do-loop|0
     local.get $2
     i64.load
     local.get $1
     i64.load
     i64.eq
     if
      local.get $2
      i32.const 8
      i32.add
      local.set $2
      local.get $1
      i32.const 8
      i32.add
      local.set $1
      local.get $0
      i32.const 4
      i32.sub
      local.tee $0
      i32.const 4
      i32.ge_u
      br_if $do-loop|0
     end
    end
   end
   loop $while-continue|1
    local.get $0
    local.tee $3
    i32.const 1
    i32.sub
    local.set $0
    local.get $3
    if
     local.get $2
     i32.load16_u
     local.tee $3
     local.get $1
     i32.load16_u
     local.tee $4
     i32.ne
     if
      local.get $3
      local.get $4
      i32.sub
      br $__inlined_func$~lib/util/string/compareImpl
     end
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   i32.const 0
  end
  i32.eqz
 )
 (func $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<i32>>#constructor (result i32)
  (local $0 i32)
  i32.const 32
  i32.const 8
  call $~lib/rt/stub/__new
  local.tee $0
  i32.const 32
  call $~lib/memory/memory.fill
  local.get $0
 )
 (func $~lib/memory/memory.copy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $2
   local.set $4
   local.get $0
   local.get $1
   i32.eq
   br_if $~lib/util/memory/memmove|inlined.0
   local.get $0
   local.get $1
   i32.lt_u
   if
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|0
      local.get $0
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $4
       i32.const 1
       i32.sub
       local.set $4
       local.get $0
       local.tee $2
       i32.const 1
       i32.add
       local.set $0
       local.get $1
       local.tee $3
       i32.const 1
       i32.add
       local.set $1
       local.get $2
       local.get $3
       i32.load8_u
       i32.store8
       br $while-continue|0
      end
     end
     loop $while-continue|1
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $0
       local.get $1
       i64.load
       i64.store
       local.get $4
       i32.const 8
       i32.sub
       local.set $4
       local.get $0
       i32.const 8
       i32.add
       local.set $0
       local.get $1
       i32.const 8
       i32.add
       local.set $1
       br $while-continue|1
      end
     end
    end
    loop $while-continue|2
     local.get $4
     if
      local.get $0
      local.tee $2
      i32.const 1
      i32.add
      local.set $0
      local.get $1
      local.tee $3
      i32.const 1
      i32.add
      local.set $1
      local.get $2
      local.get $3
      i32.load8_u
      i32.store8
      local.get $4
      i32.const 1
      i32.sub
      local.set $4
      br $while-continue|2
     end
    end
   else
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|3
      local.get $0
      local.get $4
      i32.add
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $4
       i32.const 1
       i32.sub
       local.tee $4
       local.get $0
       i32.add
       local.get $1
       local.get $4
       i32.add
       i32.load8_u
       i32.store8
       br $while-continue|3
      end
     end
     loop $while-continue|4
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $4
       i32.const 8
       i32.sub
       local.tee $4
       local.get $0
       i32.add
       local.get $1
       local.get $4
       i32.add
       i64.load
       i64.store
       br $while-continue|4
      end
     end
    end
    loop $while-continue|5
     local.get $4
     if
      local.get $4
      i32.const 1
      i32.sub
      local.tee $4
      local.get $0
      i32.add
      local.get $1
      local.get $4
      i32.add
      i32.load8_u
      i32.store8
      br $while-continue|5
     end
    end
   end
  end
 )
 (func $~lib/rt/__newArray (param $0 i32) (result i32)
  (local $1 i32)
  i32.const 8
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $1
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 8
   call $~lib/memory/memory.copy
  end
  i32.const 16
  i32.const 9
  call $~lib/rt/stub/__new
  local.tee $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 8
  i32.store offset=8
  local.get $0
  i32.const 2
  i32.store offset=12
  local.get $0
 )
 (func $~lib/staticarray/StaticArray.fromArray<i32> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 7
  call $~lib/rt/stub/__new
  local.tee $2
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/memory/memory.copy
  local.get $2
 )
 (func $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  local.get $1
  i32.le_u
  if
   i32.const 1328
   i32.const 1104
   i32.const 118
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.load
  local.tee $0
  i32.eqz
  if
   i32.const 1984
   i32.const 1104
   i32.const 122
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $~lib/string/String#charCodeAt (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.eqz
  if
   i32.const -1
   return
  end
  local.get $0
  i32.load16_u
 )
 (func $src/wasm/chess_ai/isWhitePiece (param $0 i32) (result i32)
  local.get $0
  call $~lib/string/String#charCodeAt
  local.tee $0
  i32.const 90
  i32.le_s
  local.get $0
  i32.const 65
  i32.ge_s
  i32.and
 )
 (func $src/wasm/chess_ai/isOn (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 8
  i32.lt_s
  local.get $0
  i32.const 0
  i32.ge_s
  i32.and
  local.get $1
  i32.const 0
  i32.ge_s
  i32.and
  local.get $1
  i32.const 8
  i32.lt_s
  i32.and
 )
 (func $src/wasm/chess_ai/isEmpty (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
  i32.const 2112
  call $~lib/string/String.__eq
 )
 (func $src/wasm/chess_ai/Move#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  i32.const 8
  i32.const 5
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 2400
   return
  end
  i32.const 0
  local.get $0
  i32.sub
  local.get $0
  local.get $0
  i32.const 31
  i32.shr_u
  local.tee $2
  select
  local.tee $0
  i32.const 10
  i32.ge_u
  i32.const 1
  i32.add
  local.get $0
  i32.const 10000
  i32.ge_u
  i32.const 3
  i32.add
  local.get $0
  i32.const 1000
  i32.ge_u
  i32.add
  local.get $0
  i32.const 100
  i32.lt_u
  select
  local.get $0
  i32.const 1000000
  i32.ge_u
  i32.const 6
  i32.add
  local.get $0
  i32.const 1000000000
  i32.ge_u
  i32.const 8
  i32.add
  local.get $0
  i32.const 100000000
  i32.ge_u
  i32.add
  local.get $0
  i32.const 10000000
  i32.lt_u
  select
  local.get $0
  i32.const 100000
  i32.lt_u
  select
  local.get $2
  i32.add
  local.tee $3
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $1
  loop $do-loop|0
   local.get $3
   i32.const 1
   i32.sub
   local.tee $3
   i32.const 1
   i32.shl
   local.get $1
   i32.add
   local.get $0
   i32.const 10
   i32.rem_u
   i32.const 48
   i32.add
   i32.store16
   local.get $0
   i32.const 10
   i32.div_u
   local.tee $0
   br_if $do-loop|0
  end
  local.get $2
  if
   local.get $1
   i32.const 45
   i32.store16
  end
  local.get $1
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.const 1
  i32.shl
  local.tee $2
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.const 1
  i32.shl
  local.tee $3
  i32.add
  local.tee $4
  i32.eqz
  if
   i32.const 1296
   return
  end
  local.get $4
  i32.const 1
  call $~lib/rt/stub/__new
  local.tee $4
  local.get $0
  local.get $2
  call $~lib/memory/memory.copy
  local.get $2
  local.get $4
  i32.add
  local.get $1
  local.get $3
  call $~lib/memory/memory.copy
  local.get $4
 )
 (func $~lib/rt/stub/__realloc (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.const 15
  i32.and
  i32.const 1
  local.get $0
  select
  if
   i32.const 0
   i32.const 1232
   i32.const 45
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $0
  local.get $0
  i32.const 4
  i32.sub
  local.tee $4
  i32.load
  local.tee $3
  i32.add
  i32.eq
  local.set $5
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $2
  local.get $1
  local.get $3
  i32.gt_u
  if
   local.get $5
   if
    local.get $1
    i32.const 1073741820
    i32.gt_u
    if
     i32.const 1168
     i32.const 1232
     i32.const 52
     i32.const 33
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.add
    call $~lib/rt/stub/maybeGrowMemory
    local.get $4
    local.get $2
    i32.store
   else
    local.get $2
    local.get $3
    i32.const 1
    i32.shl
    local.tee $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    call $~lib/rt/stub/__alloc
    local.tee $1
    local.get $0
    local.get $3
    call $~lib/memory/memory.copy
    local.get $1
    local.set $0
   end
  else
   local.get $5
   if
    local.get $0
    local.get $2
    i32.add
    global.set $~lib/rt/stub/offset
    local.get $4
    local.get $2
    i32.store
   end
  end
  local.get $0
 )
 (func $~lib/rt/stub/__renew (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 1168
   i32.const 1232
   i32.const 99
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 16
  i32.sub
  local.get $1
  i32.const 16
  i32.add
  call $~lib/rt/stub/__realloc
  local.tee $0
  i32.const 4
  i32.sub
  local.get $1
  i32.store offset=16
  local.get $0
  i32.const 16
  i32.add
 )
 (func $~lib/array/Array<src/wasm/chess_ai/Move>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $4
  local.tee $6
  local.get $0
  i32.load offset=8
  local.tee $2
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $6
   i32.const 268435455
   i32.gt_u
   if
    i32.const 1056
    i32.const 1424
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   local.get $0
   i32.load
   local.tee $5
   local.get $2
   i32.const 1
   i32.shl
   local.tee $7
   i32.const 1073741820
   local.get $7
   i32.const 1073741820
   i32.lt_u
   select
   local.tee $7
   local.get $6
   i32.const 8
   local.get $6
   i32.const 8
   i32.gt_u
   select
   i32.const 2
   i32.shl
   local.tee $6
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.tee $6
   call $~lib/rt/stub/__renew
   local.tee $7
   i32.add
   local.get $6
   local.get $2
   i32.sub
   call $~lib/memory/memory.fill
   local.get $5
   local.get $7
   i32.ne
   if
    local.get $0
    local.get $7
    i32.store
    local.get $0
    local.get $7
    i32.store offset=4
   end
   local.get $0
   local.get $6
   i32.store offset=8
  end
  local.get $0
  i32.load offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $4
  i32.store offset=12
 )
 (func $src/wasm/chess_ai/isEnemy (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
  local.tee $0
  i32.const 2112
  call $~lib/string/String.__eq
  if
   i32.const 0
   return
  end
  local.get $3
  if (result i32)
   local.get $0
   call $src/wasm/chess_ai/isWhitePiece
   i32.eqz
  else
   local.get $0
   call $src/wasm/chess_ai/isWhitePiece
  end
 )
 (func $src/wasm/chess_ai/pieceValue (param $0 i32) (result i32)
  block $case12|0
   block $case11|0
    block $case10|0
     block $case9|0
      block $case8|0
       block $case7|0
        block $case6|0
         block $case5|0
          block $case4|0
           block $case3|0
            block $case2|0
             block $case1|0
              local.get $0
              call $~lib/string/String#charCodeAt
              local.tee $0
              i32.const 80
              i32.ne
              if
               local.get $0
               i32.const 78
               i32.eq
               br_if $case1|0
               local.get $0
               i32.const 66
               i32.eq
               br_if $case2|0
               local.get $0
               i32.const 82
               i32.eq
               br_if $case3|0
               local.get $0
               i32.const 81
               i32.eq
               br_if $case4|0
               local.get $0
               i32.const 75
               i32.eq
               br_if $case5|0
               local.get $0
               i32.const 112
               i32.eq
               br_if $case6|0
               local.get $0
               i32.const 110
               i32.eq
               br_if $case7|0
               local.get $0
               i32.const 98
               i32.eq
               br_if $case8|0
               local.get $0
               i32.const 114
               i32.eq
               br_if $case9|0
               local.get $0
               i32.const 113
               i32.eq
               br_if $case10|0
               local.get $0
               i32.const 107
               i32.eq
               br_if $case11|0
               br $case12|0
              end
              i32.const 1
              return
             end
             i32.const 3
             return
            end
            i32.const 3
            return
           end
           i32.const 5
           return
          end
          i32.const 9
          return
         end
         i32.const 1000
         return
        end
        i32.const -1
        return
       end
       i32.const -3
       return
      end
      i32.const -3
      return
     end
     i32.const -5
     return
    end
    i32.const -9
    return
   end
   i32.const -1000
   return
  end
  i32.const 0
 )
 (func $~lib/util/string/stagedBinaryLookup (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 8
  i32.shr_u
  local.get $0
  i32.add
  i32.load8_u
  i32.const 5
  i32.shl
  local.get $0
  i32.add
  local.get $1
  i32.const 255
  i32.and
  i32.const 3
  i32.shr_u
  i32.add
  i32.load8_u
  local.get $1
  i32.const 7
  i32.and
  i32.shr_u
  i32.const 1
  i32.and
 )
 (func $~lib/util/casemap/casemap (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.tee $1
  i32.const 8
  i32.shr_u
  local.tee $2
  i32.const 10724
  i32.add
  i32.load8_u
  local.get $2
  i32.const 7084
  i32.add
  i32.load8_u
  i32.const 86
  i32.mul
  i32.const 7084
  i32.add
  local.get $0
  i32.const 255
  i32.and
  local.tee $3
  i32.const 3
  i32.div_u
  i32.add
  i32.load8_u
  local.get $3
  i32.const 3
  i32.rem_u
  i32.const 2
  i32.shl
  i32.const 9752
  i32.add
  i32.load
  i32.mul
  i32.const 11
  i32.shr_u
  i32.const 6
  i32.rem_u
  i32.add
  i32.const 2
  i32.shl
  i32.const 9764
  i32.add
  i32.load
  local.tee $2
  i32.const 255
  i32.and
  local.set $0
  local.get $2
  i32.const 8
  i32.shr_s
  local.set $2
  block $folding-inner0
   local.get $0
   i32.const 2
   i32.lt_u
   br_if $folding-inner0
   local.get $2
   i32.const 255
   i32.and
   local.set $0
   local.get $2
   i32.const 8
   i32.shr_u
   local.set $2
   loop $while-continue|0
    local.get $0
    if
     local.get $3
     local.get $0
     i32.const 1
     i32.shr_u
     local.tee $5
     local.get $2
     i32.add
     i32.const 1
     i32.shl
     i32.const 11236
     i32.add
     i32.load8_u
     local.tee $4
     i32.eq
     if (result i32)
      local.get $2
      local.get $5
      i32.add
      i32.const 1
      i32.shl
      i32.const 11236
      i32.add
      i32.load8_u offset=1
      i32.const 2
      i32.shl
      i32.const 9764
      i32.add
      i32.load
      local.tee $2
      i32.const 255
      i32.and
      local.set $0
      local.get $2
      i32.const 8
      i32.shr_s
      local.set $2
      local.get $0
      i32.const 2
      i32.lt_u
      br_if $folding-inner0
      local.get $1
      i32.const 1
      i32.add
      return
     else
      local.get $3
      local.get $4
      i32.lt_u
      if (result i32)
       local.get $5
      else
       local.get $2
       local.get $5
       i32.add
       local.set $2
       local.get $0
       local.get $5
       i32.sub
      end
     end
     local.set $0
     br $while-continue|0
    end
   end
   local.get $1
   return
  end
  i32.const 0
  local.get $0
  i32.sub
  local.get $2
  i32.and
  local.get $1
  i32.add
 )
 (func $~lib/string/String#toLowerCase (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $9
  i32.eqz
  if
   local.get $0
   return
  end
  local.get $9
  i32.const 2
  i32.shl
  i32.const 1
  call $~lib/rt/stub/__new
  local.set $10
  loop $for-loop|0
   local.get $2
   local.get $9
   i32.lt_u
   if
    local.get $2
    i32.const 1
    i32.shl
    local.get $0
    i32.add
    i32.load16_u
    local.tee $5
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $5
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      local.get $9
      i32.const 1
      i32.sub
      local.get $2
      i32.gt_u
      i32.and
      if
       local.get $2
       i32.const 1
       i32.shl
       local.get $0
       i32.add
       i32.load16_u offset=2
       local.tee $3
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        local.get $3
        i32.const 1023
        i32.and
        local.get $5
        local.tee $1
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $5
        i32.const 131072
        i32.ge_u
        if
         local.get $11
         i32.const 1
         i32.shl
         local.get $10
         i32.add
         local.get $3
         i32.const 16
         i32.shl
         local.get $1
         i32.or
         i32.store
         local.get $11
         i32.const 1
         i32.add
         local.set $11
         br $for-continue|0
        end
       end
      end
      local.get $5
      i32.const 304
      i32.eq
      if
       local.get $11
       i32.const 1
       i32.shl
       local.get $10
       i32.add
       i32.const 50790505
       i32.store
       local.get $11
       i32.const 1
       i32.add
       local.set $11
      else
       local.get $5
       i32.const 931
       i32.eq
       if
        local.get $11
        i32.const 1
        i32.shl
        local.get $10
        i32.add
        i32.const 962
        i32.const 963
        local.get $9
        i32.const 1
        i32.gt_u
        if (result i32)
         block $~lib/util/string/isFinalSigma|inlined.0 (result i32)
          i32.const 0
          local.set $1
          local.get $2
          i32.const 0
          local.get $2
          local.tee $4
          i32.const 30
          i32.sub
          local.tee $5
          local.get $5
          i32.const 0
          i32.lt_s
          select
          local.set $7
          loop $while-continue|1
           local.get $4
           local.get $7
           i32.gt_s
           if
            i32.const -1
            local.set $5
            block $~lib/util/string/codePointBefore|inlined.0
             local.get $4
             i32.const 0
             i32.le_s
             br_if $~lib/util/string/codePointBefore|inlined.0
             local.get $4
             i32.const 1
             i32.sub
             i32.const 1
             i32.shl
             local.get $0
             i32.add
             i32.load16_u
             local.tee $8
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             local.get $4
             i32.const 2
             i32.sub
             i32.const 0
             i32.ge_s
             i32.and
             if
              local.get $8
              i32.const 1023
              i32.and
              local.get $4
              i32.const 2
              i32.sub
              i32.const 1
              i32.shl
              local.get $0
              i32.add
              i32.load16_u
              local.tee $6
              i32.const 1023
              i32.and
              i32.const 10
              i32.shl
              i32.add
              i32.const 65536
              i32.add
              local.set $5
              local.get $6
              i32.const 64512
              i32.and
              i32.const 55296
              i32.eq
              br_if $~lib/util/string/codePointBefore|inlined.0
             end
             i32.const 65533
             local.get $8
             local.get $8
             i32.const 63488
             i32.and
             i32.const 55296
             i32.eq
             select
             local.set $5
            end
            local.get $5
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 2508
             local.get $5
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             local.get $5
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 5516
              local.get $5
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             if (result i32)
              i32.const 1
             else
              i32.const 0
              br $~lib/util/string/isFinalSigma|inlined.0
             end
             local.set $1
            end
            local.get $4
            local.get $5
            i32.const 65536
            i32.ge_s
            i32.const 1
            i32.add
            i32.sub
            local.set $4
            br $while-continue|1
           end
          end
          i32.const 0
          local.get $1
          i32.eqz
          br_if $~lib/util/string/isFinalSigma|inlined.0
          drop
          i32.const 1
          i32.add
          local.tee $4
          i32.const 30
          i32.add
          local.tee $1
          local.get $9
          local.get $1
          local.get $9
          i32.lt_s
          select
          local.set $5
          loop $while-continue|2
           local.get $4
           local.get $5
           i32.lt_s
           if
            local.get $4
            i32.const 1
            i32.shl
            local.get $0
            i32.add
            i32.load16_u
            local.tee $1
            i32.const 64512
            i32.and
            i32.const 55296
            i32.eq
            local.get $9
            local.get $4
            i32.const 1
            i32.add
            i32.ne
            i32.and
            if
             local.get $4
             i32.const 1
             i32.shl
             local.get $0
             i32.add
             i32.load16_u offset=2
             local.tee $3
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             if
              local.get $3
              local.get $1
              i32.const 10
              i32.shl
              i32.add
              i32.const 56613888
              i32.sub
              local.set $1
             end
            end
            local.get $1
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 2508
             local.get $1
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             local.get $1
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 5516
              local.get $1
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             i32.eqz
             br $~lib/util/string/isFinalSigma|inlined.0
            end
            local.get $1
            i32.const 65536
            i32.ge_u
            i32.const 1
            i32.add
            local.get $4
            i32.add
            local.set $4
            br $while-continue|2
           end
          end
          i32.const 1
         end
        else
         i32.const 0
        end
        select
        i32.store16
       else
        local.get $5
        i32.const 9398
        i32.sub
        i32.const 25
        i32.le_u
        if
         local.get $11
         i32.const 1
         i32.shl
         local.get $10
         i32.add
         local.get $5
         i32.const 26
         i32.add
         i32.store16
        else
         local.get $5
         call $~lib/util/casemap/casemap
         i32.const 2097151
         i32.and
         local.tee $1
         i32.const 65536
         i32.lt_u
         if
          local.get $11
          i32.const 1
          i32.shl
          local.get $10
          i32.add
          local.get $1
          i32.store16
         else
          local.get $11
          i32.const 1
          i32.shl
          local.get $10
          i32.add
          local.get $1
          i32.const 65536
          i32.sub
          local.tee $1
          i32.const 10
          i32.shr_u
          i32.const 55296
          i32.or
          local.get $1
          i32.const 1023
          i32.and
          i32.const 56320
          i32.or
          i32.const 16
          i32.shl
          i32.or
          i32.store
          local.get $11
          i32.const 1
          i32.add
          local.set $11
         end
        end
       end
      end
     end
    else
     local.get $11
     i32.const 1
     i32.shl
     local.get $10
     i32.add
     local.get $5
     i32.const 65
     i32.sub
     i32.const 26
     i32.lt_u
     i32.const 5
     i32.shl
     local.get $5
     i32.or
     i32.store16
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    local.get $11
    i32.const 1
    i32.add
    local.set $11
    br $for-loop|0
   end
  end
  local.get $10
  local.get $11
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__renew
 )
 (func $~lib/staticarray/StaticArray<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  local.get $1
  i32.le_u
  if
   i32.const 1328
   i32.const 1104
   i32.const 118
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.load
 )
 (func $src/wasm/chess_ai/generateMoves (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  i32.const 16
  i32.const 6
  call $~lib/rt/stub/__new
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  i32.const 32
  i32.const 0
  call $~lib/rt/stub/__new
  local.tee $3
  i32.const 32
  call $~lib/memory/memory.fill
  local.get $2
  local.get $3
  i32.store
  local.get $2
  local.get $3
  i32.store offset=4
  local.get $2
  i32.const 32
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<i32>>#constructor
  local.tee $8
  i32.const 0
  i32.const 1472
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $8
  i32.const 1
  i32.const 1504
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $8
  i32.const 2
  i32.const 1536
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $8
  i32.const 3
  i32.const 1568
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $8
  i32.const 4
  i32.const 1600
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $8
  i32.const 5
  i32.const 1632
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $8
  i32.const 6
  i32.const 1664
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $8
  i32.const 7
  i32.const 1696
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<i32>>#constructor
  local.tee $9
  i32.const 0
  i32.const 1728
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $9
  i32.const 1
  i32.const 1760
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $9
  i32.const 2
  i32.const 1792
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $9
  i32.const 3
  i32.const 1824
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $9
  i32.const 4
  i32.const 1856
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $9
  i32.const 5
  i32.const 1888
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $9
  i32.const 6
  i32.const 1920
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $9
  i32.const 7
  i32.const 1952
  call $~lib/rt/__newArray
  call $~lib/staticarray/StaticArray.fromArray<i32>
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  loop $for-loop|0
   local.get $7
   i32.const 8
   i32.lt_s
   if
    i32.const 0
    local.set $4
    loop $for-loop|1
     local.get $4
     i32.const 8
     i32.lt_s
     if
      block $for-continue|1
       local.get $0
       local.get $7
       call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
       local.get $4
       call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
       local.tee $5
       i32.const 2112
       call $~lib/string/String.__eq
       br_if $for-continue|1
       local.get $5
       call $src/wasm/chess_ai/isWhitePiece
       local.get $1
       i32.const 0
       i32.ne
       i32.ne
       br_if $for-continue|1
       local.get $5
       i32.const 2144
       call $~lib/string/String.__eq
       if (result i32)
        i32.const -1
       else
        local.get $5
        i32.const 2176
        call $~lib/string/String.__eq
        i32.eqz
        i32.eqz
       end
       local.set $3
       local.get $5
       i32.const 2144
       call $~lib/string/String.__eq
       if (result i32)
        i32.const 6
       else
        i32.const 1
        i32.const -1
        local.get $5
        i32.const 2176
        call $~lib/string/String.__eq
        select
       end
       local.set $6
       local.get $3
       if
        local.get $3
        local.get $7
        i32.add
        local.tee $10
        local.get $4
        call $src/wasm/chess_ai/isOn
        if (result i32)
         local.get $0
         local.get $10
         local.get $4
         call $src/wasm/chess_ai/isEmpty
        else
         i32.const 0
        end
        if
         local.get $2
         local.get $7
         call $~lib/util/number/itoa32
         local.get $4
         call $~lib/util/number/itoa32
         call $~lib/string/String#concat
         local.get $10
         call $~lib/util/number/itoa32
         call $~lib/string/String#concat
         local.get $4
         call $~lib/util/number/itoa32
         call $~lib/string/String#concat
         i32.const 0
         call $src/wasm/chess_ai/Move#constructor
         call $~lib/array/Array<src/wasm/chess_ai/Move>#push
         local.get $6
         local.get $7
         i32.eq
         if (result i32)
          local.get $0
          local.get $3
          i32.const 1
          i32.shl
          local.get $7
          i32.add
          local.get $4
          call $src/wasm/chess_ai/isEmpty
         else
          i32.const 0
         end
         if
          local.get $2
          local.get $7
          call $~lib/util/number/itoa32
          local.get $4
          call $~lib/util/number/itoa32
          call $~lib/string/String#concat
          local.get $3
          i32.const 1
          i32.shl
          local.get $7
          i32.add
          call $~lib/util/number/itoa32
          call $~lib/string/String#concat
          local.get $4
          call $~lib/util/number/itoa32
          call $~lib/string/String#concat
          i32.const 0
          call $src/wasm/chess_ai/Move#constructor
          call $~lib/array/Array<src/wasm/chess_ai/Move>#push
         end
        end
        i32.const 0
        local.set $3
        loop $for-loop|2
         local.get $3
         i32.const 2
         i32.lt_s
         if
          local.get $10
          i32.const 1
          i32.const -1
          local.get $3
          select
          local.get $4
          i32.add
          local.tee $6
          call $src/wasm/chess_ai/isOn
          if (result i32)
           local.get $0
           local.get $10
           local.get $6
           local.get $1
           call $src/wasm/chess_ai/isEnemy
          else
           i32.const 0
          end
          if
           local.get $0
           local.get $10
           call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
           local.get $6
           call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
           call $src/wasm/chess_ai/pieceValue
           local.tee $11
           i32.const 31
           i32.shr_s
           local.set $12
           local.get $2
           local.get $7
           call $~lib/util/number/itoa32
           local.get $4
           call $~lib/util/number/itoa32
           call $~lib/string/String#concat
           local.get $10
           call $~lib/util/number/itoa32
           call $~lib/string/String#concat
           local.get $6
           call $~lib/util/number/itoa32
           call $~lib/string/String#concat
           local.get $12
           local.get $11
           local.get $12
           i32.add
           i32.xor
           call $src/wasm/chess_ai/Move#constructor
           call $~lib/array/Array<src/wasm/chess_ai/Move>#push
          end
          local.get $3
          i32.const 1
          i32.add
          local.set $3
          br $for-loop|2
         end
        end
       end
       local.get $5
       call $~lib/string/String#toLowerCase
       i32.const 11664
       call $~lib/string/String.__eq
       if
        i32.const 0
        local.set $3
        loop $for-loop|3
         local.get $3
         i32.const 8
         i32.lt_s
         if
          local.get $8
          local.get $3
          call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
          local.tee $6
          i32.const 0
          call $~lib/staticarray/StaticArray<i32>#__get
          local.get $7
          i32.add
          local.tee $10
          local.get $6
          i32.const 1
          call $~lib/staticarray/StaticArray<i32>#__get
          local.get $4
          i32.add
          local.tee $6
          call $src/wasm/chess_ai/isOn
          if
           local.get $0
           local.get $10
           local.get $6
           call $src/wasm/chess_ai/isEmpty
           if (result i32)
            i32.const 1
           else
            local.get $0
            local.get $10
            local.get $6
            local.get $1
            call $src/wasm/chess_ai/isEnemy
           end
           if
            local.get $0
            local.get $10
            local.get $6
            local.get $1
            call $src/wasm/chess_ai/isEnemy
            if (result i32)
             local.get $0
             local.get $10
             call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
             local.get $6
             call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
             call $src/wasm/chess_ai/pieceValue
             local.tee $11
             i32.const 31
             i32.shr_s
             local.tee $12
             local.get $11
             local.get $12
             i32.add
             i32.xor
            else
             i32.const 0
            end
            local.set $11
            local.get $2
            local.get $7
            call $~lib/util/number/itoa32
            local.get $4
            call $~lib/util/number/itoa32
            call $~lib/string/String#concat
            local.get $10
            call $~lib/util/number/itoa32
            call $~lib/string/String#concat
            local.get $6
            call $~lib/util/number/itoa32
            call $~lib/string/String#concat
            local.get $11
            call $src/wasm/chess_ai/Move#constructor
            call $~lib/array/Array<src/wasm/chess_ai/Move>#push
           end
          end
          local.get $3
          i32.const 1
          i32.add
          local.set $3
          br $for-loop|3
         end
        end
       end
       local.get $5
       call $~lib/string/String#charCodeAt
       i32.const 32
       i32.or
       local.tee $11
       i32.const 114
       i32.eq
       local.get $11
       i32.const 98
       i32.eq
       i32.or
       local.get $11
       i32.const 113
       i32.eq
       i32.or
       if
        i32.const 4
        i32.const 8
        i32.const 4
        local.get $11
        i32.const 113
        i32.eq
        select
        local.get $11
        i32.const 98
        i32.eq
        select
        local.set $12
        i32.const 4
        i32.const 0
        local.get $11
        i32.const 114
        i32.eq
        select
        local.set $6
        loop $for-loop|4
         local.get $6
         local.get $12
         i32.lt_s
         if
          local.get $9
          local.get $6
          call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
          local.tee $10
          i32.const 0
          call $~lib/staticarray/StaticArray<i32>#__get
          local.get $7
          i32.add
          local.set $5
          local.get $10
          i32.const 1
          call $~lib/staticarray/StaticArray<i32>#__get
          local.get $4
          i32.add
          local.set $3
          loop $while-continue|5
           local.get $5
           local.get $3
           call $src/wasm/chess_ai/isOn
           if
            block $while-break|5
             local.get $0
             local.get $5
             local.get $3
             call $src/wasm/chess_ai/isEmpty
             if
              local.get $2
              local.get $7
              call $~lib/util/number/itoa32
              local.get $4
              call $~lib/util/number/itoa32
              call $~lib/string/String#concat
              local.get $5
              call $~lib/util/number/itoa32
              call $~lib/string/String#concat
              local.get $3
              call $~lib/util/number/itoa32
              call $~lib/string/String#concat
              i32.const 0
              call $src/wasm/chess_ai/Move#constructor
              call $~lib/array/Array<src/wasm/chess_ai/Move>#push
             else
              local.get $0
              local.get $5
              local.get $3
              local.get $1
              call $src/wasm/chess_ai/isEnemy
              if
               local.get $0
               local.get $5
               call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
               local.get $3
               call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
               call $src/wasm/chess_ai/pieceValue
               local.tee $13
               i32.const 31
               i32.shr_s
               local.set $10
               local.get $2
               local.get $7
               call $~lib/util/number/itoa32
               local.get $4
               call $~lib/util/number/itoa32
               call $~lib/string/String#concat
               local.get $5
               call $~lib/util/number/itoa32
               call $~lib/string/String#concat
               local.get $3
               call $~lib/util/number/itoa32
               call $~lib/string/String#concat
               local.get $10
               local.get $10
               local.get $13
               i32.add
               i32.xor
               call $src/wasm/chess_ai/Move#constructor
               call $~lib/array/Array<src/wasm/chess_ai/Move>#push
              end
              br $while-break|5
             end
             local.get $10
             i32.const 0
             call $~lib/staticarray/StaticArray<i32>#__get
             local.get $5
             i32.add
             local.set $5
             local.get $10
             i32.const 1
             call $~lib/staticarray/StaticArray<i32>#__get
             local.get $3
             i32.add
             local.set $3
             br $while-continue|5
            end
           end
          end
          local.get $6
          i32.const 1
          i32.add
          local.set $6
          br $for-loop|4
         end
        end
       end
       local.get $11
       i32.const 107
       i32.eq
       if
        i32.const -1
        local.set $3
        loop $for-loop|6
         local.get $3
         i32.const 1
         i32.le_s
         if
          i32.const -1
          local.set $6
          loop $for-loop|7
           local.get $6
           i32.const 1
           i32.le_s
           if
            block $for-continue|7
             i32.const 1
             local.get $6
             local.get $3
             select
             i32.eqz
             br_if $for-continue|7
             local.get $3
             local.get $7
             i32.add
             local.tee $5
             local.get $4
             local.get $6
             i32.add
             local.tee $10
             call $src/wasm/chess_ai/isOn
             i32.eqz
             br_if $for-continue|7
             local.get $0
             local.get $5
             local.get $10
             call $src/wasm/chess_ai/isEmpty
             if (result i32)
              i32.const 1
             else
              local.get $0
              local.get $5
              local.get $10
              local.get $1
              call $src/wasm/chess_ai/isEnemy
             end
             if
              local.get $0
              local.get $5
              local.get $10
              local.get $1
              call $src/wasm/chess_ai/isEnemy
              if (result i32)
               local.get $0
               local.get $5
               call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
               local.get $10
               call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
               call $src/wasm/chess_ai/pieceValue
               local.tee $11
               i32.const 31
               i32.shr_s
               local.tee $12
               local.get $11
               local.get $12
               i32.add
               i32.xor
              else
               i32.const 0
              end
              local.set $11
              local.get $2
              local.get $7
              call $~lib/util/number/itoa32
              local.get $4
              call $~lib/util/number/itoa32
              call $~lib/string/String#concat
              local.get $5
              call $~lib/util/number/itoa32
              call $~lib/string/String#concat
              local.get $10
              call $~lib/util/number/itoa32
              call $~lib/string/String#concat
              local.get $11
              call $src/wasm/chess_ai/Move#constructor
              call $~lib/array/Array<src/wasm/chess_ai/Move>#push
             end
            end
            local.get $6
            i32.const 1
            i32.add
            local.set $6
            br $for-loop|7
           end
          end
          local.get $3
          i32.const 1
          i32.add
          local.set $3
          br $for-loop|6
         end
        end
       end
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|1
     end
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  local.get $2
 )
 (func $src/wasm/chess_ai/getBestMove~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.load offset=4
  local.get $0
  i32.load offset=4
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<src/wasm/chess_ai/Move> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $3
  i32.add
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.ge_s
   if
    local.get $4
    i32.const 1
    i32.sub
    local.set $3
    local.get $4
    i32.const 2
    i32.shl
    local.get $0
    i32.add
    i32.load
    local.set $5
    loop $while-continue|1
     local.get $1
     local.get $3
     i32.le_s
     if
      local.get $5
      local.get $3
      i32.const 2
      i32.shl
      local.get $0
      i32.add
      i32.load
      local.tee $6
      i32.const 11696
      i32.load
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.lt_s
      if
       local.get $3
       i32.const 2
       i32.shl
       local.get $0
       i32.add
       local.get $6
       i32.store offset=4
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       br $while-continue|1
      end
     end
    end
    local.get $3
    i32.const 2
    i32.shl
    local.get $0
    i32.add
    local.get $5
    i32.store offset=4
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<src/wasm/chess_ai/Move> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $1
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.load
  local.get $1
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.shl
  local.get $0
  i32.add
  i32.load
  i32.const 11696
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $3
    i32.gt_s
    if (result i32)
     local.get $3
     i32.const 2
     i32.shl
     local.get $0
     i32.add
     local.tee $4
     i32.load offset=4
     local.get $4
     i32.load
     i32.const 11696
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $while-continue|0
    end
   end
   local.get $3
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     i32.const 2
     i32.shl
     local.get $0
     i32.add
     local.tee $4
     i32.load
     local.set $5
     local.get $4
     local.get $2
     i32.const 2
     i32.shl
     local.get $0
     i32.add
     local.tee $4
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $4
     local.get $5
     i32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $3
    i32.gt_s
    if (result i32)
     local.get $3
     i32.const 2
     i32.shl
     local.get $0
     i32.add
     local.tee $1
     i32.load offset=4
     local.get $1
     i32.load
     i32.const 11696
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $while-continue|2
    end
   end
  end
  local.get $3
 )
 (func $~lib/util/sort/mergeRuns<src/wasm/chess_ai/Move> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  local.get $3
  i32.add
  local.set $6
  local.get $2
  i32.const 1
  i32.add
  local.set $5
  loop $for-loop|0
   local.get $1
   local.get $5
   i32.lt_s
   if
    local.get $4
    local.get $5
    i32.const 1
    i32.sub
    local.tee $5
    i32.const 2
    i32.shl
    local.tee $7
    i32.add
    local.get $0
    local.get $7
    i32.add
    i32.load
    i32.store
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $6
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    local.get $4
    i32.add
    local.get $2
    i32.const 2
    i32.shl
    local.get $0
    i32.add
    i32.load offset=4
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $2
    i32.const 2
    i32.shl
    local.get $4
    i32.add
    i32.load
    local.tee $6
    local.get $5
    i32.const 2
    i32.shl
    local.get $4
    i32.add
    i32.load
    local.tee $7
    i32.const 11696
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $1
     i32.const 2
     i32.shl
     local.get $0
     i32.add
     local.get $6
     i32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
    else
     local.get $1
     i32.const 2
     i32.shl
     local.get $0
     i32.add
     local.get $7
     i32.store
     local.get $5
     i32.const 1
     i32.add
     local.set $5
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/rt/stub/__free (param $0 i32)
  local.get $0
  i32.const 15
  i32.and
  i32.const 1
  local.get $0
  select
  if
   i32.const 0
   i32.const 1232
   i32.const 70
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $0
  local.get $0
  i32.const 4
  i32.sub
  local.tee $0
  i32.load
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
 )
 (func $~lib/util/sort/SORT<src/wasm/chess_ai/Move> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   call $~lib/util/sort/insertionSort<src/wasm/chess_ai/Move>
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $5
  i32.const 2
  i32.shl
  local.tee $6
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.tee $9
  local.get $6
  i32.add
  local.set $10
  loop $for-loop|0
   local.get $4
   local.get $5
   i32.lt_u
   if
    local.get $4
    i32.const 2
    i32.shl
    local.get $9
    i32.add
    i32.const -1
    i32.store
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $11
  local.get $0
  i32.const 0
  local.get $1
  i32.const 1
  i32.sub
  local.tee $8
  call $~lib/util/sort/extendRunRight<src/wasm/chess_ai/Move>
  local.tee $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 32
  i32.lt_s
  if
   local.get $0
   i32.const 0
   local.get $8
   i32.const 31
   local.get $8
   i32.const 31
   i32.lt_s
   select
   local.tee $1
   local.get $4
   call $~lib/util/sort/insertionSort<src/wasm/chess_ai/Move>
  end
  loop $while-continue|1
   local.get $1
   local.get $8
   i32.lt_s
   if
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    local.tee $5
    local.get $8
    call $~lib/util/sort/extendRunRight<src/wasm/chess_ai/Move>
    local.tee $4
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.tee $6
    i32.const 32
    i32.lt_s
    if
     local.get $0
     local.get $5
     local.get $8
     local.get $5
     i32.const 31
     i32.add
     local.tee $4
     local.get $4
     local.get $8
     i32.gt_s
     select
     local.tee $4
     local.get $6
     call $~lib/util/sort/insertionSort<src/wasm/chess_ai/Move>
    end
    local.get $2
    local.get $5
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $8
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $12
    i64.div_u
    local.get $4
    local.get $5
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $12
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $6
    loop $for-loop|2
     local.get $3
     local.get $6
     i32.gt_u
     if
      local.get $3
      i32.const 2
      i32.shl
      local.get $9
      i32.add
      i32.load
      local.tee $7
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $7
       local.get $10
       local.get $3
       i32.const 2
       i32.shl
       local.tee $2
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $1
       local.get $11
       call $~lib/util/sort/mergeRuns<src/wasm/chess_ai/Move>
       local.get $2
       local.get $9
       i32.add
       i32.const -1
       i32.store
       local.get $7
       local.set $2
      end
      local.get $3
      i32.const 1
      i32.sub
      local.set $3
      br $for-loop|2
     end
    end
    local.get $9
    local.get $6
    i32.const 2
    i32.shl
    local.tee $3
    i32.add
    local.get $2
    i32.store
    local.get $3
    local.get $10
    i32.add
    local.get $1
    i32.store
    local.get $5
    local.set $2
    local.get $4
    local.set $1
    local.get $6
    local.set $3
    br $while-continue|1
   end
  end
  loop $for-loop|3
   local.get $3
   if
    local.get $3
    i32.const 2
    i32.shl
    local.get $9
    i32.add
    i32.load
    local.tee $1
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $1
     local.get $3
     i32.const 2
     i32.shl
     local.get $10
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $8
     local.get $11
     call $~lib/util/sort/mergeRuns<src/wasm/chess_ai/Move>
    end
    local.get $3
    i32.const 1
    i32.sub
    local.set $3
    br $for-loop|3
   end
  end
  local.get $11
  call $~lib/rt/stub/__free
  local.get $9
  call $~lib/rt/stub/__free
 )
 (func $~lib/array/Array<src/wasm/chess_ai/Move>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=12
  local.get $1
  i32.le_u
  if
   i32.const 1328
   i32.const 1424
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.eqz
  if
   i32.const 1984
   i32.const 1424
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $~lib/util/string/strtol<f64> (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $2
  i32.eqz
  if
   f64.const nan:0x8000000000000
   return
  end
  local.get $0
  local.tee $1
  i32.load16_u
  local.set $0
  loop $while-continue|0
   block $__inlined_func$~lib/util/string/isSpace (result i32)
    local.get $0
    i32.const 128
    i32.or
    i32.const 160
    i32.eq
    local.get $0
    i32.const 9
    i32.sub
    i32.const 4
    i32.le_u
    i32.or
    local.get $0
    i32.const 5760
    i32.lt_u
    br_if $__inlined_func$~lib/util/string/isSpace
    drop
    i32.const 1
    local.get $0
    i32.const -8192
    i32.add
    i32.const 10
    i32.le_u
    br_if $__inlined_func$~lib/util/string/isSpace
    drop
    i32.const 1
    local.get $0
    i32.const 5760
    i32.eq
    local.get $0
    i32.const 8232
    i32.eq
    i32.or
    local.get $0
    i32.const 8233
    i32.eq
    local.get $0
    i32.const 8239
    i32.eq
    i32.or
    local.get $0
    i32.const 8287
    i32.eq
    local.get $0
    i32.const 12288
    i32.eq
    i32.or
    i32.or
    i32.or
    local.get $0
    i32.const 65279
    i32.eq
    i32.or
    br_if $__inlined_func$~lib/util/string/isSpace
    drop
    i32.const 0
   end
   if
    local.get $1
    i32.const 2
    i32.add
    local.tee $1
    i32.load16_u
    local.set $0
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|0
   end
  end
  f64.const 1
  local.set $5
  local.get $0
  i32.const 43
  i32.eq
  local.get $0
  i32.const 45
  i32.eq
  i32.or
  if (result i32)
   local.get $2
   i32.const 1
   i32.sub
   local.tee $2
   i32.eqz
   if
    f64.const nan:0x8000000000000
    return
   end
   f64.const -1
   f64.const 1
   local.get $0
   i32.const 45
   i32.eq
   select
   local.set $5
   local.get $1
   i32.const 2
   i32.add
   local.tee $1
   i32.load16_u
  else
   local.get $0
  end
  i32.const 48
  i32.eq
  local.get $2
  i32.const 2
  i32.gt_s
  i32.and
  if
   block $break|1
    block $case2|1
     block $case1|1
      local.get $1
      i32.load16_u offset=2
      i32.const 32
      i32.or
      local.tee $0
      i32.const 98
      i32.ne
      if
       local.get $0
       i32.const 111
       i32.eq
       br_if $case1|1
       local.get $0
       i32.const 120
       i32.eq
       br_if $case2|1
       br $break|1
      end
      local.get $1
      i32.const 4
      i32.add
      local.set $1
      local.get $2
      i32.const 2
      i32.sub
      local.set $2
      i32.const 2
      local.set $3
      br $break|1
     end
     local.get $1
     i32.const 4
     i32.add
     local.set $1
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
     i32.const 8
     local.set $3
     br $break|1
    end
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    local.get $2
    i32.const 2
    i32.sub
    local.set $2
    i32.const 16
    local.set $3
   end
  end
  local.get $3
  i32.const 10
  local.get $3
  select
  local.set $3
  loop $while-continue|2
   block $while-break|2
    local.get $2
    local.tee $0
    i32.const 1
    i32.sub
    local.set $2
    local.get $0
    if
     local.get $1
     i32.load16_u
     local.tee $0
     i32.const 48
     i32.sub
     i32.const 10
     i32.lt_u
     if (result i32)
      local.get $0
      i32.const 48
      i32.sub
     else
      local.get $0
      i32.const 55
      i32.sub
      local.get $0
      i32.const 87
      i32.sub
      local.get $0
      local.get $0
      i32.const 97
      i32.sub
      i32.const 25
      i32.le_u
      select
      local.get $0
      i32.const 65
      i32.sub
      i32.const 25
      i32.le_u
      select
     end
     local.tee $0
     local.get $3
     i32.ge_u
     if
      local.get $4
      i64.reinterpret_f64
      i64.const 1
      i64.shl
      i64.const 2
      i64.sub
      i64.const -9007199254740994
      i64.gt_u
      if
       f64.const nan:0x8000000000000
       return
      end
      br $while-break|2
     end
     local.get $4
     local.get $3
     f64.convert_i32_s
     f64.mul
     local.get $0
     f64.convert_i32_u
     f64.add
     local.set $4
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|2
    end
   end
  end
  local.get $5
  local.get $4
  f64.mul
 )
 (func $src/wasm/chess_ai/makeMove (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  i32.const 0
  call $~lib/string/String#charAt
  call $~lib/util/string/strtol<f64>
  i32.trunc_f64_s
  local.set $5
  local.get $1
  i32.const 1
  call $~lib/string/String#charAt
  call $~lib/util/string/strtol<f64>
  i32.trunc_f64_s
  local.set $6
  local.get $1
  i32.const 2
  call $~lib/string/String#charAt
  call $~lib/util/string/strtol<f64>
  i32.trunc_f64_s
  local.set $8
  local.get $1
  i32.const 3
  call $~lib/string/String#charAt
  call $~lib/util/string/strtol<f64>
  i32.trunc_f64_s
  local.set $9
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#constructor
  local.set $3
  loop $for-loop|0
   local.get $4
   i32.const 8
   i32.lt_s
   if
    call $~lib/staticarray/StaticArray<~lib/string/String>#constructor
    local.set $7
    i32.const 0
    local.set $2
    loop $for-loop|1
     local.get $2
     i32.const 8
     i32.lt_s
     if
      local.get $7
      local.get $2
      local.get $0
      local.get $4
      call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
      local.get $2
      call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
      call $~lib/staticarray/StaticArray<~lib/string/String>#__set
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|1
     end
    end
    local.get $3
    local.get $4
    local.get $7
    call $~lib/staticarray/StaticArray<~lib/string/String>#__set
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $0
  local.get $5
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
  local.get $6
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
  local.set $0
  local.get $3
  local.get $8
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
  local.get $9
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.const 4
  i32.gt_u
  if (result i32)
   local.get $1
   i32.const 4
   call $~lib/string/String#charAt
  else
   local.get $0
  end
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $3
  local.get $5
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
  local.get $6
  i32.const 2112
  call $~lib/staticarray/StaticArray<~lib/string/String>#__set
  local.get $3
 )
 (func $src/wasm/chess_ai/isKingPresent (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 11728
  i32.const 11760
  local.get $1
  select
  local.set $3
  loop $for-loop|0
   local.get $2
   i32.const 8
   i32.lt_s
   if
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 8
     i32.lt_s
     if
      local.get $0
      local.get $2
      call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
      local.get $1
      call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
      local.get $3
      call $~lib/string/String.__eq
      if
       i32.const 1
       return
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 0
 )
 (func $src/wasm/chess_ai/evaluate (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  loop $for-loop|0
   local.get $2
   i32.const 8
   i32.lt_s
   if
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 8
     i32.lt_s
     if
      local.get $0
      local.get $2
      call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
      local.get $1
      call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#__get
      call $src/wasm/chess_ai/pieceValue
      local.get $3
      i32.add
      local.set $3
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $src/wasm/chess_ai/minimax (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.get $4
  i32.eqz
  call $src/wasm/chess_ai/isKingPresent
  i32.eqz
  if
   i32.const 100000
   local.get $1
   i32.sub
   return
  end
  local.get $0
  local.get $4
  call $src/wasm/chess_ai/isKingPresent
  i32.eqz
  if
   local.get $1
   i32.const 100000
   i32.sub
   return
  end
  local.get $1
  i32.eqz
  if
   local.get $0
   call $src/wasm/chess_ai/evaluate
   return
  end
  local.get $0
  local.get $4
  call $src/wasm/chess_ai/generateMoves
  local.tee $7
  i32.load offset=12
  i32.eqz
  if
   local.get $0
   call $src/wasm/chess_ai/evaluate
   return
  end
  local.get $4
  if
   i32.const -99999
   local.set $4
   loop $for-loop|0
    local.get $7
    i32.load offset=12
    local.get $6
    i32.gt_s
    if
     block $for-break0
      local.get $4
      local.get $0
      local.get $7
      local.get $6
      call $~lib/array/Array<src/wasm/chess_ai/Move>#__get
      i32.load
      call $src/wasm/chess_ai/makeMove
      local.get $1
      i32.const 1
      i32.sub
      local.get $2
      local.get $3
      i32.const 0
      call $src/wasm/chess_ai/minimax
      local.tee $5
      i32.lt_s
      if
       local.get $5
       local.set $4
      end
      local.get $5
      local.get $2
      local.get $2
      local.get $5
      i32.lt_s
      select
      local.tee $2
      local.get $3
      i32.ge_s
      br_if $for-break0
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|0
     end
    end
   end
  else
   i32.const 99999
   local.set $4
   loop $for-loop|1
    local.get $7
    i32.load offset=12
    local.get $6
    i32.gt_s
    if
     block $for-break1
      local.get $4
      local.get $0
      local.get $7
      local.get $6
      call $~lib/array/Array<src/wasm/chess_ai/Move>#__get
      i32.load
      call $src/wasm/chess_ai/makeMove
      local.get $1
      i32.const 1
      i32.sub
      local.get $2
      local.get $3
      i32.const 1
      call $src/wasm/chess_ai/minimax
      local.tee $5
      i32.gt_s
      if
       local.get $5
       local.set $4
      end
      local.get $2
      local.get $5
      local.get $3
      local.get $3
      local.get $5
      i32.gt_s
      select
      local.tee $3
      i32.ge_s
      br_if $for-break1
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|1
     end
    end
   end
  end
  local.get $4
 )
 (func $src/wasm/chess_ai/getBestMove (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<~lib/string/String>>#constructor
  local.set $3
  loop $for-loop|0
   local.get $2
   i32.const 8
   i32.lt_s
   if
    call $~lib/staticarray/StaticArray<~lib/string/String>#constructor
    local.set $6
    i32.const 0
    local.set $4
    loop $for-loop|1
     local.get $4
     i32.const 8
     i32.lt_s
     if
      local.get $6
      local.get $4
      local.get $0
      local.get $4
      local.get $2
      i32.const 3
      i32.shl
      i32.add
      call $~lib/string/String#charAt
      call $~lib/staticarray/StaticArray<~lib/string/String>#__set
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|1
     end
    end
    local.get $3
    local.get $2
    local.get $6
    call $~lib/staticarray/StaticArray<~lib/string/String>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $3
  local.get $1
  i32.const 1392
  call $~lib/string/String.__eq
  local.tee $6
  call $src/wasm/chess_ai/generateMoves
  local.tee $4
  i32.load offset=4
  local.get $4
  i32.load offset=12
  call $~lib/util/sort/SORT<src/wasm/chess_ai/Move>
  i32.const 1296
  local.set $0
  i32.const -99999
  i32.const 99999
  local.get $6
  select
  local.set $2
  loop $for-loop|01
   local.get $4
   i32.load offset=12
   local.get $5
   i32.gt_s
   if
    local.get $2
    local.get $3
    local.get $4
    local.get $5
    call $~lib/array/Array<src/wasm/chess_ai/Move>#__get
    i32.load
    local.tee $7
    call $src/wasm/chess_ai/makeMove
    i32.const 2
    i32.const -99999
    i32.const 99999
    local.get $6
    i32.eqz
    call $src/wasm/chess_ai/minimax
    local.tee $1
    i32.lt_s
    local.get $1
    local.get $2
    i32.lt_s
    local.get $6
    select
    if
     local.get $1
     local.set $2
     local.get $7
     local.set $0
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|01
   end
  end
  local.get $0
 )
 (func $~lib/rt/stub/__pin (param $0 i32) (result i32)
  local.get $0
 )
 (func $~lib/rt/stub/__unpin (param $0 i32)
  nop
 )
 (func $~lib/rt/stub/__collect
  nop
 )
 (func $~start
  i32.const 11868
  global.set $~lib/rt/stub/offset
 )
 ;; custom section "as-bind_bindings", size 208, contents: "{\"typeIds\":{\"~lib/string/String\":{\"id\":1,\"byteSize\":0}},\"importedFunctions\":{},\"exportedFunctions\":{\"getBestMove\":{\"returnType\":\"~lib/string/String\",\"parameters\":[\"~lib/string/String\",\"~lib/string/String\"]}}}"
)
